#!/usr/bin/env node

/**
 * Module dependencies.
 */

 var app = require('../app');
 var debug = require('debug')('proyecto_bd2:server');
 var http = require('http');
 var fs = require('fs');
/**
 * Get port from environment and store in Express.
 */

 var port = normalizePort(process.env.PORT || '3000');
 app.set('port', port);

/**
 * Create HTTP server.
 */

 var server = http.createServer(app);

/**
 * Listen on provided port, on all network interfaces.
 */

 server.listen(port);
 server.on('error', onError);
 server.on('listening', onListening);

/**
 * Normalize a port into a number, string, or false.
 */

 function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}

/**
 * Event listener for HTTP server "error" event.
 */

 function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
  ? 'Pipe ' + port
  : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
    console.error(bind + ' requires elevated privileges');
    process.exit(1);
    break;
    case 'EADDRINUSE':
    console.error(bind + ' is already in use');
    process.exit(1);
    break;
    default:
    throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

 function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
  ? 'pipe ' + addr
  : 'port ' + addr.port;
  debug('Listening on ' + bind);
}

io = require('socket.io').listen(server);
var oracledb = require('oracledb');
var connection;
oracledb.getConnection({
  user          : "PROYECTO",
  password      : "123456",
  connectString : "192.168.1.5/XE"
},function(err,connection_ora){
  if(err){console.error(err.message);return;}
  connection = connection_ora;
});
io.on('connection',function(socket){
  socket.on('req_llenar_usuarios',function(){
    connection.execute(
      "SELECT * FROM TODOS_USUARIOS",
      function(err, result)
      {
        if (err) { console.error(err.message); return; }
        console.log(result.rows);
        var resultado='';
        for(var i = 0;i<result.rows.length;i++){
          resultado = resultado + "~" + result.rows[i][0];
        }
        socket.emit('llenar_usuarios',resultado.substring(1));
      });
  });
  socket.on('req_llenar_tusuario',function(){
    connection.execute(
      "SELECT * FROM TODOS_TIPOSU",
      function(err, result)
      {
        if (err) { console.error(err.message); return; }
        console.log(result.rows);
        var resultado='';
        for(var i = 0;i<result.rows.length;i++){
          var resultado2='';
          for(var j =0;j<result.rows[i].length;j++){
            resultado2 = resultado2 + ";" + result.rows[i][j]
          }
          resultado = resultado + "~" + resultado2.substring(1);
        }
        socket.emit('llenar_tusuario',resultado.substring(1));
      });
  });
  socket.on('crear_usuario',function(data){
    connection.execute(
      "SELECT VERIFICAR_USERNAME(\'"+data.username+"\') as respuesta from DUAL",
      function(err, result){
        if (err) { console.error(err.message); socket.emit('res_adminusers','fallo'); return; }
        var disponible = result.rows[0][0];
        if(disponible == 0){
          connection.execute(
            "BEGIN CREAR_USUARIO(\'"+data.username+"\',\'"+data.telefono+"\',\'"+data.correo+"\',\'"+data.password+"\',\'"+data.nombre+"\',"+data.tipo_usuario+"); END;",
            function(err,result){
              if(err){ console.error(err.message); socket.emit('res_adminusers','fallo');return;}          
              socket.emit('res_adminusers','exito');
            });
        }else{
          socket.emit('res_adminusers','fallo');
          return;
        }
      });
  });
  socket.on('req_llenar_usuario',function(data){
    connection.execute(
      "SELECT PASSWORD,NOMBRE,TELEFONO,CORREO,TIPO_USUARIO FROM USUARIO WHERE USERNAME = :username",[data],
      function(err, result){
        if (err) { console.error(err.message); return; }
        socket.emit('llenar_usuario',{
          password:result.rows[0][0],
          nombre:result.rows[0][1],
          telefono:result.rows[0][2],
          correo:result.rows[0][3],
          tipo_usuario:result.rows[0][4]
        });
      });
  });
  socket.on('editar_usuario',function(data){
    connection.execute(
      "BEGIN MODIFICAR_USUARIO(\'"+data.username+"\',\'"+data.telefono+"\',\'"+data.correo+"\',\'"+data.password+"\',\'"+data.nombre+"\',"+data.tipo_usuario+"); END;",
      function(err, result){
        if (err) { console.error(err.message);socket.emit('res_adminusers','fallo'); return; }
        socket.emit('res_adminusers','exito');
      });
  });
  socket.on('borrar_usuario',function(data){
    connection.execute(
      "BEGIN ELIMINAR_USUARIO(\'"+data.username+"\'); END;",
      function(err, result){
        if (err) { console.error(err.message);socket.emit('res_adminusers','fallo'); return; }
        socket.emit('res_adminusers','exito');
      });
  });
  socket.on('solicitar_lista_est',function(data){
    connection.execute(
      "SELECT E.ESTABLECIMIENTO,E.NOMBRE FROM ESTABLECIMIENTO E,USUARIO U WHERE E.username = U.username and U.username =:username",[data.username],function(err,result){
        if(err){console.error(err.message);return;}
        var resultado='';
        for(var i = 0;i<result.rows.length;i++){
          var resultado2='';
          for(var j =0;j<result.rows[i].length;j++){
            resultado2 = resultado2 + ";" + result.rows[i][j]
          }
          resultado = resultado + "~" + resultado2.substring(1);
        }
        socket.emit('lista_est',resultado.substring(1));
      });
  });
  socket.on('solicitar_llenar_establecimiento',function(data){
    connection.execute(
      "SELECT * FROM TABLE(DEVOLVER_E_U(:username,:est))",[data.username,data.est],function(err,result){
        if(err){console.error(err.message);return;}
        var enombre='';
        var etelefono='';
        var edireccion='';
        var elongitud='';
        var elatitud='';
        var eid='';
        var eusuario='';
        if(result.rows.length>0){
          for(var i = 0;i<result.rows[0].length;i++){
            switch(i){
              case 0:eid = result.rows[0][i];break;
              case 1:etelefono = result.rows[0][i];break;
              case 2:edireccion = result.rows[0][i];break;
              case 3:enombre = result.rows[0][i];break;
              case 4:elatitud = result.rows[0][i];break;
              case 5:elongitud = result.rows[0][i];break;
              case 6:eusuario = result.rows[0][i];break;
              default:
            }
          }
        }
        socket.emit('llenar_establecimiento',{nombre:enombre,telefono:etelefono,direccion:edireccion,longitud:elongitud,latitud:elatitud,id:eid,usuario:eusuario});
      });
  });
  socket.on('solicitar_llenar_servicios',function(data){
    connection.execute(
      "SELECT SERVICIO,NOMBRE FROM TODOS_SERVICIOS",function(err,result){
        if(err){console.error(err.message);return;}
        var resultado='';
        for(var i = 0;i<result.rows.length;i++){
          var resultado2='';
          for(var j =0;j<result.rows[i].length;j++){
            resultado2 = resultado2 + ";" + result.rows[i][j]
          }
          resultado = resultado + "~" + resultado2.substring(1);
        }
        socket.emit('llenar_servicios',resultado.substring(1));
      });
  });
  socket.on('solicitar_llenar_servicios_agregados',function(data){
    connection.execute(
      "SELECT SERVICIO,NOMBRE FROM TABLE(DEVOLVER_SERVICIOS_USUARIO(:username,:est))",[data.username,data.est],function(err,result){
        if(err){console.error(err.message);return;}
        var resultado='';
        for(var i = 0;i<result.rows.length;i++){
          var resultado2='';
          for(var j =0;j<result.rows[i].length;j++){
            resultado2 = resultado2 + ";" + result.rows[i][j]
          }
          resultado = resultado + "~" + resultado2.substring(1);
        }
        socket.emit('llenar_servicios_agregados',resultado.substring(1));
      });
  });
  socket.on('solicitar_llenar_atributos',function(data){
    connection.execute(
      "SELECT ATRIBUTO,NOMBRE FROM TODOS_ATRIBUTOS",function(err,result){
        if(err){console.error(err.message);return;}
        var resultado='';
        for(var i = 0;i<result.rows.length;i++){
          var resultado2='';
          for(var j =0;j<result.rows[i].length;j++){
            resultado2 = resultado2 + ";" + result.rows[i][j]
          }
          resultado = resultado + "~" + resultado2.substring(1);
        }
        socket.emit('llenar_atributos',resultado.substring(1));
      });
  });
  socket.on('solicitar_llenar_atributos_agregados',function(data){
    connection.execute(
      "SELECT ATRIBUTO,NOMBRE FROM TABLE(DEVOLVER_ATRIBUTOS_USUARIO(:username,:est))",[data.username,data.est],function(err,result){
        if(err){console.error(err.message);return;}
        var resultado='';
        for(var i = 0;i<result.rows.length;i++){
          var resultado2='';
          for(var j =0;j<result.rows[i].length;j++){
            resultado2 = resultado2 + ";" + result.rows[i][j]
          }
          resultado = resultado + "~" + resultado2.substring(1);
        }
        socket.emit('llenar_atributos_agregados',resultado.substring(1));
      });
  });
  socket.on('solicitar_llenar_dimensiones',function(data){
    connection.execute(
      "SELECT DIMENSION,NOMBRE FROM TODAS_DIMENSIONES",function(err,result){
        if(err){console.error(err.message);return;}
        var resultado='';
        for(var i = 0;i<result.rows.length;i++){
          var resultado2='';
          for(var j =0;j<result.rows[i].length;j++){
            resultado2 = resultado2 + ";" + result.rows[i][j]
          }
          resultado = resultado + "~" + resultado2.substring(1);
        }
        socket.emit('llenar_dimensiones',resultado.substring(1));
      });
  });
  socket.on('solicitar_llenar_dimensiones_agregadas',function(data){
    connection.execute(
      "SELECT DIMENSION,NOMBRE FROM TABLE(DEVOLVER_DIMENSIONES_USUARIO(:username,:est))",[data.username,data.est],function(err,result){
        if(err){console.error(err.message);return;}
        var resultado='';
        for(var i = 0;i<result.rows.length;i++){
          var resultado2='';
          for(var j =0;j<result.rows[i].length;j++){
            resultado2 = resultado2 + ";" + result.rows[i][j]
          }
          resultado = resultado + "~" + resultado2.substring(1);
        }
        socket.emit('llenar_dimensiones_agregadas',resultado.substring(1));
      });
  });
  socket.on('solicitar_llenar_servicio',function(data){
    connection.execute(
      "SELECT IMPORTANCIA,DISPONIBLES FROM TABLE(DEVOLVER_ESTAB_SE(:establecimiento,:servicio))",[data.establecimiento,data.servicio],function(err,result){
        if(err){return;}
        else{
          socket.emit('llenar_servicio',{importancia:result.rows[0][0],disponibles:result.rows[0][1]});
        }
      });
  });
  socket.on('solicitar_llenar_atributo',function(data){
    connection.execute(
      "SELECT VALOR FROM TABLE(DEVOLVER_VALOR_V(:establecimiento,:atributo))",[data.establecimiento,data.atributo],function(err,result){
        if(err){return;}
        else{
          socket.emit('llenar_atributo',{valor:result.rows[0][0]});
        }
      });
  });
  socket.on('solicitar_llenar_dimension',function(data){
    connection.execute(
      "SELECT VALOR FROM TABLE(DEVOLVER_CATEGORIA_V(:establecimiento,:dimension))",[data.establecimiento,data.dimension],function(err,result){
        if(err){return;}
        else{
          socket.emit('llenar_dimension',{valor:result.rows[0][0]});
        }
      });
  });
  socket.on('editar_establecimiento',function(data){
    connection.execute(
      "BEGIN MODIFICAR_ESTABLECIMIENTO(:establecimiento,:telefono,:direccion,:nombre,:latitud,:longitud); END;",[data.establecimiento,data.telefono,data.direccion,data.nombre,data.latitud,data.longitud],function(err,result){
        if(err){socket.emit('res_editar_establecimiento','fallo');}
        else{socket.emit('res_editar_establecimiento','exito');}
      });
  });
  socket.on('agregar_servicio',function(data){
    connection.execute(
      "BEGIN CREAR_ESTABLECIMIENTO_SERVICIO(:establecimiento,:servicio,:importancia,:disponibles);END;",[data.establecimiento,data.servicio,data.importancia,data.disponibles],function(err,result){
        if(err){console.error(err.message);socket.emit('res_agregar_servicio','error');}
        else{socket.emit('res_agregar_servicio','exito');}
      });
  });
  socket.on('agregar_dimension',function(data){
    connection.execute(
      "BEGIN CREAR_CATEGORIA(:establecimiento,:dimension,:valor);END;",[data.establecimiento,data.dimension,data.valor],function(err,result){
        if(err){console.error(err.message);socket.emit('res_agregar_dimension','error');}
        else{socket.emit('res_agregar_dimension','exito');}
      });
  });
  socket.on('agregar_atributo',function(data){
    connection.execute(
      "BEGIN CREAR_VALOR(:establecimiento,:atributo,:valor);END;",[data.establecimiento,data.atributo,data.valor],function(err,result){
        if(err){console.error(err.message);socket.emit('res_agregar_atributo','error');}
        else{socket.emit('res_agregar_atributo','exito');}
      });
  });
  socket.on('quitar_servicio',function(data){
    connection.execute(
      "BEGIN ELIMINAR_E_S(:establecimiento,:servicio); END;",[data.establecimiento,data.servicio],function(err,result){
        if(err){socket.emit('res_agregar_servicio','error');}
        else{socket.emit('res_agregar_servicio','exito');}
      });
  });
  socket.on('quitar_dimension',function(data){
    connection.execute(
      "BEGIN ELIMINAR_CATEGORIA(:establecimiento,:dimension); END;",[data.establecimiento,data.dimension],function(err,result){
        if(err){socket.emit('res_agregar_dimension','error');}
        else{socket.emit('res_agregar_dimension','exito');}
      });
  });
  socket.on('quitar_atributo',function(data){
    connection.execute(
      "BEGIN ELIMINAR_VALOR(:establecimiento,:atributo); END;",[data.establecimiento,data.atributo],function(err,result){
        if(err){socket.emit('res_agregar_atributo','error');}
        else{socket.emit('res_agregar_atributo','exito');}
      });
  });
  socket.on('crear_servicio',function(data){
    connection.execute(
      "BEGIN CREAR_SERVICIO(:nombre,:descripcion); END;",[data.nombre,data.descripcion],function(err,result){
        if(err){socket.emit('res_agregar_servicio','fallo');}
        else{socket.emit('res_agregar_servicio','exito');}
      });
  });
  socket.on('crear_atributo',function(data){
    connection.execute(
      "BEGIN CREAR_ATRIBUTO(:nombre,:descripcion); END;",[data.nombre,data.descripcion],function(err,result){
        if(err){socket.emit('res_agregar_atributo','fallo');}
        else{socket.emit('res_agregar_atributo','exito');}
      });
  });
  socket.on('crear_dimension',function(data){
    connection.execute(
      "BEGIN CREAR_DIMENSION(:nombre); END;",[data.nombre],function(err,result){
        if(err){socket.emit('res_agregar_dimension','fallo');}
        else{socket.emit('res_agregar_dimension','exito');}
      });
  });
  socket.on('editar_servicio',function(data){
    connection.execute(
      "BEGIN MODIFICAR_ES(:establecimiento,:servicio,:importancia,:disponibles); END;",[data.establecimiento,data.servicio,data.importancia,data.disponibles],function(err,result){
        if(err){socket.emit('res_agregar_servicio','fallo');}
        else{socket.emit('res_agregar_servicio','exito');}
      });
  });
  socket.on('editar_atributo',function(data){
    connection.execute(
      "BEGIN MODIFICAR_VALOR(:establecimiento,:atributo,:valor); END;",[data.establecimiento,data.atributo,data.valor],function(err,result){
        if(err){socket.emit('res_agregar_atributo','fallo');}
        else{socket.emit('res_agregar_atributo','exito');}
      });
  });
  socket.on('editar_dimension',function(data){
    connection.execute(
      "BEGIN MODIFICAR_CATEGORIA(:establecimiento,:dimension,:valor); END;",[data.establecimiento,data.dimension,data.valor],function(err,result){
        if(err){socket.emit('res_agregar_dimension','fallo');}
        else{socket.emit('res_agregar_dimension','exito');}
      });
  });
  //INICIO
  socket.on('buscar',function(data){
    connection.execute(
      "SELECT * FROM TABLE(BUSCAR_ESTAB_F(:busqueda))",['%'+data.busqueda+'%'],function(err,result){
        if(err){console.error(err.message);}
        else{
          var resultado='';
        for(var i = 0;i<result.rows.length;i++){
          var resultado2='';
          for(var j =0;j<result.rows[i].length;j++){
            resultado2 = resultado2 + ";" + result.rows[i][j]
          }
          resultado = resultado + "~" + resultado2.substring(1);
        }
        console.log(resultado.substring(1));
        socket.emit('resultado_busqueda',resultado.substring(1));
        }
      });
  });
  //INFO
  socket.on('req_llenar_info',function(data){
    connection.execute(
      "SELECT * FROM TABLE(BUSCAR_ESTAB_ID(:establecimiento))",[data.establecimiento],function(err,result){
        if(err){}
          else{
            var resultado2='';
            for(var j =0;j<result.rows[0].length;j++){
              resultado2 = resultado2 + ";" + result.rows[0][j]
            }
            console.log(resultado2.substring(1));
            socket.emit('llenar_info',resultado2.substring(1));
          }
        });
  });
  socket.on('req_llenar_info_dimensiones',function(data){
    connection.execute(
      "SELECT * FROM TABLE(DEVOLVER_CATEGORIA_D(:establecimiento))",[data.establecimiento],function(err,result){
        if(err){console.error(err.message);}
        else{
          var resultado='';
        for(var i = 0;i<result.rows.length;i++){
          var resultado2='';
          for(var j =0;j<result.rows[i].length;j++){
            resultado2 = resultado2 + ";" + result.rows[i][j]
          }
          resultado = resultado + "~" + resultado2.substring(1);
        }
        console.log(resultado.substring(1));
        socket.emit('llenar_info_dimensiones',resultado.substring(1));
        }
      });
  });
  socket.on('req_llenar_info_atributos',function(data){
    connection.execute(
      "SELECT * FROM TABLE(DEVOLVER_VALOR_A(:establecimiento))",[data.establecimiento],function(err,result){
        if(err){console.error(err.message);}
        else{
          var resultado='';
        for(var i = 0;i<result.rows.length;i++){
          var resultado2='';
          for(var j =0;j<result.rows[i].length;j++){
            resultado2 = resultado2 + ";" + result.rows[i][j]
          }
          resultado = resultado + "~" + resultado2.substring(1);
        }
        console.log(resultado.substring(1));
        socket.emit('llenar_info_atributos',resultado.substring(1));
        }
      });
  });
  socket.on('req_llenar_info_servicios',function(data){
    connection.execute(
      "SELECT * FROM TABLE(DEVOLVER_CALIFICACION(:establecimiento))",[data.establecimiento],function(err,result){
        if(err){console.error(err.message);}
        else{
          var resultado='';
        for(var i = 0;i<result.rows.length;i++){
          var resultado2='';
          for(var j =0;j<result.rows[i].length;j++){
            resultado2 = resultado2 + ";" + result.rows[i][j]
          }
          resultado = resultado + "~" + resultado2.substring(1);
        }
        console.log(resultado.substring(1));
        socket.emit('llenar_info_servicios',resultado.substring(1));
        }
      });
  });
  socket.on('req_llenar_otrosnombres',function(data){
    connection.execute(
      "SELECT NOMBRE FROM OTRO_NOMBRE WHERE ESTABLECIMIENTO = :establecimiento",[data.establecimiento],function(err,result){
        if(err){console.error(err.message);}
        else{
          var resultado='';
        for(var i = 0;i<result.rows.length;i++){
          resultado = resultado + "~" + result.rows[i][0];
        }
        console.log(resultado.substring(1));
        socket.emit('llenar_otrosnombres',resultado.substring(1));
        }
      });
  });
  socket.on('req_caltotal',function(data){
    connection.execute(
      "SELECT * FROM TABLE(DEVOLVER_CALIFICACIONT(:establecimiento))",[data.establecimiento],function(err,result){
        if(err){console.log(err.message);return;}
          else{
            if(result.rows.length>0){
            socket.emit('res_caltotal',result.rows[0][0]*7);}
          }
        });
  });
  socket.on('calificar_servicio',function(data){
    if(data.comentario==null){
      data.comentario=' ';
    }
    connection.execute(
      "BEGIN CREAR_RC(:establecimiento,:servicio,:username,:tipo,:valor,:comentario,:inicio,:final); END;",[data.establecimiento,data.servicio,data.username,1,data.valor,data.comentario,null,null],function(err,result){
        if(err){console.error(err.message);}
        socket.emit('calificar_servicio_res','exito');
      });
  });
  socket.on('reservar_servicio',function(data){
    console.log('llega');
    console.log(data.inicio.replace('T',' '));
    connection.execute(
      "SELECT VERIFICAR_DISPONIBLES(:establecimiento,:servicio) AS RESPUESTA FROM DUAL",[data.establecimiento,data.servicio],function(err,result){
        if(err){console.error(err.message);return;}
        
        else{
          if(result.rows[0][0] == 1){
            connection.execute(
              "BEGIN CREAR_RC(:establecimiento,:servicio,:username,:tipo,:valor,:comentario,TO_DATE(:inicio,'yyyy-mm-dd/hh24:mi'),:final); END;",[data.establecimiento,data.servicio,data.username,2,data.valor,data.comentario,data.inicio.replace('T','/'),null],function(err,result){
                if(err){console.error(err.message);return;}
                console.log('exito');
                console.log(data);
              });
          }else{
            console.log('lleno?');
          }
        }
      });
  });
  socket.on('insertar_no_oficial',function(data){
    console.log(data);
    connection.execute(
      "BEGIN CREAR_ESTABLECIMIENTO(:telefono,:direccion,:nombre,:latitud,:longitud,:username); END;",[data.telefono,data.direccion,data.nombre,data.latitud,data.longitud,data.username],function(err,result){
        if(err){console.error(err.message);return;}
        console.log('exito');
        socket.emit('nooficial_exito');
      });
  });
  socket.on('req_llenar_no_oficial',function(){
    connection.execute(
      "SELECT * FROM TODOS_ESTABLECIMIENTOS_3",function(err,result){
        if(err){console.error(err.message);}
        else{
          var resultado='';
        for(var i = 0;i<result.rows.length;i++){
          var resultado2='';
          for(var j =0;j<result.rows[i].length;j++){
            resultado2 = resultado2 + ";" + result.rows[i][j]
          }
          resultado = resultado + "~" + resultado2.substring(1);
        }
        socket.emit('llenar_no_oficial',resultado.substring(1));
        }
      });
  });
  socket.on('req_llenar__oficial',function(){
    connection.execute(
      "SELECT * FROM TODOS_ESTABLECIMIENTOS_2",function(err,result){
        if(err){console.error(err.message);}
        else{
          var resultado='';
        for(var i = 0;i<result.rows.length;i++){
          var resultado2='';
          for(var j =0;j<result.rows[i].length;j++){
            resultado2 = resultado2 + ";" + result.rows[i][j]
          }
          resultado = resultado + "~" + resultado2.substring(1);
        }
        socket.emit('llenar__oficial',resultado.substring(1));
        }
      });
  });
  socket.on('merge',function(data){
    connection.execute("BEGIN MERGE_ESTABLECIMIENTO(:oficial,:nooficial); END;",[data.estabof,data.estabnoof],function(err,result){
      if(err){console.error(err.message);return;}
      socket.emit("merge_res",'exito');
    });
  });
  socket.on('borrar_establecimiento_no_oficial',function(data){
    connection.execute(
      "BEGIN ELIMINAR_ESTABLECIMIENTO(:establecimiento); END;",[data.establecimiento],function(err,result){
        if(err){console.error(err.message);return;}
        socket.emit('borrar_establecimiento_no_oficial_res','exito');
      });
  });
  socket.on('req_llenar_comentariosextra',function(data){
    connection.execute(
      "SELECT * FROM TABLE(DEVOLVER_CALIFICACION_NP(:establecimiento))",[data.establecimiento],function(err,result){
        if(err){console.error(err.message);}
        else{
          var resultado='';
        for(var i = 0;i<result.rows.length;i++){
          var resultado2='';
          for(var j =0;j<result.rows[i].length;j++){
            resultado2 = resultado2 + ";" + result.rows[i][j]
          }
          resultado = resultado + "~" + resultado2.substring(1);
        }
        console.log(resultado.substring(1));
        socket.emit('llenar_comentariosextra',resultado.substring(1));
        }
      });
  });
  socket.on('asignaciones_usuario_req',function(data){
    connection.execute(
      "SELECT * FROM TABLE(DEVOLVER_RESERVACIONESU(:username))",[data.username],function(err,result){
        if(err){console.error(err.message);}
        else{
          var resultado='';
        for(var i = 0;i<result.rows.length;i++){
          var resultado2='';
          for(var j =0;j<result.rows[i].length;j++){
            resultado2 = resultado2 + ";" + result.rows[i][j]
          }
          resultado = resultado + "~" + resultado2.substring(1);
        }
        console.log(resultado.substring(1));
        socket.emit('asignaciones_usuario_res',resultado.substring(1));
        }
      });
  });
  socket.on('exportar_archivo',function(){
    console.log('llego');
    connection.execute("SELECT * FROM CA12_CA11_CA8",function(err,result){
      if(err){console.error(err.message);return;}
      fs.unlink("/home/julio/hola2.csv",function(){
        for(var w=0;w<result.metaData.length;w++){
          fs.appendFile("/home/julio/hola2.csv",','+result.metaData[w].name,function(err){
            console.log(result.rows.length);
            console.log(w);
            if(w == result.rows.length){
              fs.appendFile('/home/julio/hola2.csv','\n',function(){
                for(var i=0;i<result.rows.length;i++){
                  fs.appendFile("/home/julio/hola2.csv",result.rows[i]+"\n",function(err){
                    if(err){throw err}
                  });
                }
                console.log('done');
              });
            }
          });
        }
      });
    });
  });
});
